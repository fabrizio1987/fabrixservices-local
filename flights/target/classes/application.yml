endpoints:
  shutdown:
    enabled: true
info:
  app:
    description: Fabrix Flights Application
    name: Flights Microservice
    version: 1.0.0
management:
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    com:
      fabrix:
        flights: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
          
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      detailsForCustomerSupportApp:
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 2
        waitDurationInOpenState: 30000
  ratelimiter:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      sayHello:
        limitForPeriod: 1
        limitRefreshPeriod: 5000
        timeoutDuration: 5000
  retry:
    instances:
      retryForCustomerDetails:
        max-attempts: 3
        waitDuration: 2000
server:
  port: 8080
spring:
  application:
    name: flights
  config:
    import: optional:configserver:http://localhost:8071/
  cloud:
    kubernetes:
      discovery:
        all-namespaces: true
    openfeign:
      circuitbreaker:
        enabled: true 
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
      kafka:
        binder:
          brokers:
            - localhost:9092         
  datasource:
    driverClassName: org.h2.Driver
    password: ''
    url: jdbc:h2:mem:testdb
    username: sa
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  profiles:
    active: prod
